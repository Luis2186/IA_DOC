---
// Diagram component for displaying visual diagrams
export interface Props {
  type: 'mermaid' | 'svg' | 'image';
  content: string;
  title?: string;
  width?: string;
  height?: string;
}

const { type, content, title, width = '100%', height = 'auto' } = Astro.props;
---

<div class="diagram-container">
  {title && <h4 class="diagram-title">{title}</h4>}
  
  {type === 'mermaid' && (
    <div class="mermaid-diagram" data-mermaid={content} style={`width: ${width}; height: ${height};`}>
      <pre class="mermaid">{content}</pre>
    </div>
  )}
  
  {type === 'svg' && (
    <div class="svg-diagram" style={`width: ${width}; height: ${height};`} set:html={content} />
  )}
  
  {type === 'image' && (
    <div class="image-diagram" style={`width: ${width}; height: ${height};`}>
      <img src={content} alt={title || 'Diagram'} />
    </div>
  )}
</div>

<style>
  .diagram-container {
    margin: 1.5rem 0;
    text-align: center;
  }

  .diagram-title {
    margin: 0 0 1rem 0;
    font-size: 1.1rem;
    font-weight: 600;
    color: #333;
  }

  .mermaid-diagram {
    background-color: #f8f9fa;
    border: 1px solid #e9ecef;
    border-radius: 8px;
    padding: 1rem;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .mermaid-diagram pre {
    margin: 0;
    background: none;
    border: none;
    padding: 0;
    font-family: 'Arial', sans-serif;
  }

  .svg-diagram {
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: #f8f9fa;
    border: 1px solid #e9ecef;
    border-radius: 8px;
    padding: 1rem;
  }

  .image-diagram {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .image-diagram img {
    max-width: 100%;
    height: auto;
    border-radius: 8px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  }
</style>

<script>
  // Initialize Mermaid diagrams if present
  document.addEventListener('DOMContentLoaded', () => {
    const mermaidDiagrams = document.querySelectorAll('.mermaid-diagram');
    if (mermaidDiagrams.length > 0) {
      // Load Mermaid library dynamically if needed
      if (typeof (window as any).mermaid === 'undefined') {
        const script = document.createElement('script');
        script.src = 'https://cdn.jsdelivr.net/npm/mermaid@10/dist/mermaid.min.js';
        script.onload = () => {
          (window as any).mermaid.initialize({ startOnLoad: true });
        };
        document.head.appendChild(script);
      } else {
        (window as any).mermaid.initialize({ startOnLoad: true });
      }
    }
  });
</script>
